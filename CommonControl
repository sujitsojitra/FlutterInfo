

Widget getThemeButton(String title, Color borderColor, BuildContext context, bool isFilled, method){
  return Container(
    height: 48,
    width: MediaQuery.of(context).size.width - 32,
    margin: EdgeInsets.only(top: 8, bottom: 8),
    child: FlatButton(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(5),
        side: BorderSide(color: borderColor, width: 2)),
      color: isFilled?borderColor:Colors.transparent,
      textColor: Colors.white,
      onPressed: method,
      child: Text(
        title,
        style: GoogleFonts.openSans(
          fontSize: 16.0,
          fontWeight: semiBold
        ),
      ),
    ),
  );
}

Widget getThemeTextField(BuildContext context, TextEditingController controller, String hint, TextInputType inputType, bool isSecure, FocusNode currentNode, TextInputAction event,Widget prefix){
  bool isCapitalizeFirst = false;
  if(hint.toLowerCase().contains("email") || hint.toLowerCase().contains("password") || hint.toLowerCase().contains("first name")||hint.toLowerCase().contains("last name")||hint.toLowerCase().contains("username")){
    isCapitalizeFirst = false;
  }else{
    isCapitalizeFirst = true;
  }
  return Container(
    height: 50,
    margin: EdgeInsets.only(bottom: 24),
    width: MediaQuery.of(context).size.width - 32,
    child: TextFormField(
      textCapitalization: isCapitalizeFirst ? TextCapitalization.sentences : TextCapitalization.none,
      controller: controller,
      keyboardType: inputType,
      obscureText: isSecure,
      style: GoogleFonts.openSans(),
      onFieldSubmitted: (value){
        event==TextInputAction.done?currentNode.unfocus():currentNode.nextFocus();
      },
      textInputAction: event,
      decoration: InputDecoration(
        prefixIcon: prefix,
        filled: true,
        fillColor: themeWhite,
        contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
        hintText: hint,
//        labelText: label,
//        labelStyle: GoogleFonts.openSans(color: themeBlue),
        hintStyle: GoogleFonts.openSans(color: Colors.grey),
        focusedBorder:OutlineInputBorder(
          borderSide: BorderSide(color: themeBlue, width: 2.0),
          borderRadius: BorderRadius.circular(5.0),
        ),
        border: OutlineInputBorder(
          borderSide: BorderSide(color: themeBlue, width: 2.0),
          borderRadius: BorderRadius.circular(5.0),
        ),
        enabledBorder: OutlineInputBorder(
          borderSide: BorderSide(color: themeBlue, width: 2.0),
          borderRadius: BorderRadius.circular(5.0),
        ),
      ),
    ),
  );
}




TextEditingController txtUserName = TextEditingController();
TextEditingController txtEmail = TextEditingController();
TextEditingController txtPassword = TextEditingController();
TextEditingController txtCountry = TextEditingController();
TextEditingController txtCurrency = TextEditingController();
TextEditingController txtPromoCode = TextEditingController();


@override
Widget build(BuildContext context) {
  FocusNode focusNode = FocusNode();

return(
getThemeTextField(context, txtUserName, "Username", TextInputType.text, false, focusNode, TextInputAction.next,null),
getThemeTextField(context, txtEmail, "Email", TextInputType.emailAddress, false, focusNode, TextInputAction.next,null),

getThemeButton("Sign Up", themeGreen, context, true, (){
                                    String username = txtUserName.text;
                                    String email = txtEmail.text;
                                    String password = txtPassword.text;
                                    String country = txtCountry.text;
                                    String currency = txtCurrency.text;
                                    String promoCode = txtPromoCode.text;

                                    if(username == null || username.length == 0){
                                      showToast("Please enter username");
                                      return;
                                    }else if(email == null || email.length == 0){
                                      showToast("Please enter email");
                                      return;
                                    }else if(!isValidEmail(email)){
                                      showToast("Please enter valid email");
                                      return;
                                    }else if(password == null || password.length == 0){
                                      showToast("Please enter password");
                                      return;
                                    }else if(password.length < 8 || password.length > 12){
                                      showToast("Password must be 8-12 characters long");
                                      return;
                                    }else if(country == null || country.length == 0 || selectedCountryCode == ""){
                                      showToast("Please select country");
                                      return;
                                    }else if(currency == null || currency.length == 0){
                                      showToast("Please select currency");
                                      return;
                                    }else if(currency.toLowerCase() == "no data"){
                                      showToast("No currency loaded, Try later.");
                                      return;
                                    }else if(!isAgree){
                                      showToast("Please agree to vbet Terms & Conditions");
                                      return;
                                    }else{
                                      RegisterRequestUserInfo userInfo = RegisterRequestUserInfo(
                                          username,
                                          password,
                                          selectedCountryCode,
                                          email,
                                          currency,
                                          promoCode,
                                          int.parse(partnerId),
                                          "3600",
                                          "eng",
                                          isAgree
                                      );

                                       isLoading = true;
                                      setState(() {

                                      });

                                    }

                                  }),

);
